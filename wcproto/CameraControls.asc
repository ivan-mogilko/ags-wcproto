//-----------------------------------------------------------------------------
//
// Default camera controls module.
// Handles player input and moves/rotates camera.
//
//-----------------------------------------------------------------------------

float speed = 15.0;
float yaw, pitch, roll;

export speed, yaw, pitch, roll;


//Joystick* joy;

/*
bool IsPOVLeftDown(this Joystick *) {
  return this.POV & 8 != 0;
}
*/

static void CameraControls::Init() {
  mouse.SetPosition(SX, SY);
  mouse.Mode = eModePointer;
  //if (JoystickCount() > 0) joy = Joystick.Open(0);
}

static void CameraControls::HandleInput() {
  yaw = IntToFloat(mouse.x - SX) / IntToFloat(SX * 4);
  pitch = IntToFloat(mouse.y - SY) / IntToFloat(SY * 4);
   
  float rollTarget = 0.2 * IntToFloat(IsKeyPressed(eKeyD) - IsKeyPressed(eKeyA));
  roll += (rollTarget - roll) * 0.07;
  
  float speedTarget;
  speed += 10.0 * IntToFloat(IsKeyPressed(eKeyW) - IsKeyPressed(eKeyS));
  if (speed < 0.0) speed = 0.0;
  if (speed > 500.0) speed = 500.0;
  
  /*
  if (joy != null) {
    yaw = IntToFloat(joy.x) / IntToFloat(JOY_RANGE * 5);
    pitch = IntToFloat(-joy.y) / IntToFloat(JOY_RANGE * 5);
  
    float lim = 0.06;
    if (abs(yaw) < lim) yaw = 0.0; else yaw -= sgn(yaw) * lim;
    if (abs(pitch) < lim) pitch = 0.0; else pitch -= sgn(pitch) * lim;
    
    roll = IntToFloat(joy.GetAxis(4)) / IntToFloat(JOY_RANGE * 4);
    if (abs(roll) < lim) roll = 0.0;
    
    speedTarget = IntToFloat(joy.GetAxis(2) > 10) * 500.0;
    speed += 10.0 * sgn(speedTarget - speed);
    
    lblDebug.Text = String.Format("%d", joy.IsPOVLeftDown());
  }
  */
}
